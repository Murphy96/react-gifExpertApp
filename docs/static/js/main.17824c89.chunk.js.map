{"version":3,"sources":["components/AddCategory.js","helpers/getGifs.js","components/GifGridItem.js","components/GifGrid.js","hooks/useFetchGifs.js","GitExpertApp.js","index.js"],"names":["AddCategory","setCategories","useState","inputValue","setInputValue","onSubmit","e","preventDefault","length","category","type","value","onChange","target","getGifs","a","url","encodeURI","fetch","resp","json","data","gifs","map","img","id","title","images","downsized_medium","GifGridItem","className","src","alt","GifGrid","loading","state","setState","useEffect","then","useFetchGifs","GitExpertApp","categories","ReactDOM","render","document","getElementById"],"mappings":"mMA8BeA,EA5BK,SAAC,GAAuB,IAArBC,EAAoB,EAApBA,cAAoB,EACHC,mBAAS,IADN,mBAChCC,EADgC,KACpBC,EADoB,KAavC,OACI,uBAAMC,SARW,SAACC,GAClBA,EAAEC,iBACEJ,EAAWK,OAAS,IACpBP,GAAe,SAAAQ,GAAQ,OAAKN,GAAL,mBAAoBM,OAC3CL,EAAc,MAIlB,UACI,gDACA,uBACIM,KAAK,OACLC,MAAQR,EACRS,SAhBc,SAACN,GACvBF,EAAeE,EAAEO,OAAOF,c,+BCLnBG,EAAO,uCAAG,WAAQL,GAAR,uBAAAM,EAAA,6DACbC,EADa,yFAC4EC,UAAWR,GADvF,sBAEAS,MAAMF,GAFN,cAEbG,EAFa,gBAGIA,EAAKC,OAHT,uBAGXC,EAHW,EAGXA,KACFC,EAAOD,EAAKE,KAAI,SAAAC,GAAQ,IAAD,EACzB,MAAO,CACHC,GAAID,EAAIC,GACRC,MAAOF,EAAIE,MACXV,IAAG,UAAEQ,EAAIG,cAAN,aAAE,EAAYC,iBAAiBZ,QARvB,kBAWZM,GAXY,4CAAH,sDCULO,EATK,SAAC,GAAsB,EAApBJ,GAAqB,IAAjBC,EAAgB,EAAhBA,MAAOV,EAAS,EAATA,IAC9B,OACI,sBAAKc,UAAU,yCAAf,UACI,qBAAKC,IAAMf,EAAMgB,IAAMN,IACvB,4BAAKA,QCoBFO,EAvBC,SAAC,GAAkB,IAAhBxB,EAAe,EAAfA,SAAe,ECDN,SAACA,GAAc,IAAD,EACZP,mBAAS,CAC/BmB,KAAM,GACNa,SAAS,IAHyB,mBAC/BC,EAD+B,KACxBC,EADwB,KAkBtC,OAZAC,qBAAW,WACPvB,EAAQL,GACH6B,MAAK,SAAAd,GACFY,EAAS,CACLf,KAAMG,EACNU,SAAS,SAGvB,CAAEzB,IAIG0B,EDhB0BI,CAAc9B,GAAlCkB,EADiB,EACtBN,KAAaa,EADS,EACTA,QACrB,OACI,qCACI,oBAAIJ,UAAU,oCAAd,SAAmDrB,IAClDyB,GAAW,mBAAGJ,UAAU,mCAAb,2BACZ,qBAAKA,UAAU,YAAf,SAEQH,EAAOJ,KAAI,SAACC,GACR,OACI,cAAC,EAAD,eAEQA,GADCA,EAAIC,aEY1Be,EAtBM,WAAO,IAAD,EACatC,mBAAS,CAAC,cADvB,mBAChBuC,EADgB,KACJxC,EADI,KAGvB,OACI,qCACI,8CACA,cAAC,EAAD,CAAaA,cAAgBA,IAC7B,uBACA,6BAEQwC,EAAWlB,KAAK,SAAAd,GAAQ,OACpB,cAAC,EAAD,CAEIA,SAAWA,GADLA,Y,MCVlCiC,IAASC,OACL,cAAC,EAAD,IACFC,SAASC,eAAe,W","file":"static/js/main.17824c89.chunk.js","sourcesContent":["import React,{ useState } from 'react';\r\nimport PropTypes from 'prop-types';\r\nconst AddCategory = ({ setCategories }) => {\r\n    const [inputValue, setInputValue] = useState('');\r\n\r\n    const handleInputChange = (e) =>{\r\n        setInputValue( e.target.value );\r\n    }\r\n    const handleSubmit = (e) =>{\r\n        e.preventDefault();\r\n        if( inputValue.length > 2){\r\n            setCategories( category => [inputValue, ...category ]);\r\n            setInputValue('');\r\n        }\r\n    }\r\n    return (\r\n        <form onSubmit={ handleSubmit }>\r\n            <h1> Add Category </h1>\r\n            <input \r\n                type=\"text\"\r\n                value={ inputValue }\r\n                onChange={ handleInputChange }\r\n            />\r\n        </form>\r\n    )\r\n}\r\nAddCategory.propTypes = {\r\n    setCategories: PropTypes.func.isRequired\r\n}\r\n\r\nexport default AddCategory;\r\n","\r\nexport const getGifs = async ( category ) => {\r\n    const url = `http://api.giphy.com/v1/gifs/search?api_key=HmSelutabEQRWMawUwJD0IoTv9r6Vh4F&q=${ encodeURI( category )  }&limit=10`;\r\n    const resp = await fetch(url);\r\n    const { data } = await resp.json();\r\n    const gifs = data.map(img => {\r\n        return {\r\n            id: img.id,\r\n            title: img.title,\r\n            url: img.images?.downsized_medium.url,\r\n        }\r\n    })\r\n    return gifs;\r\n}","import React from 'react'\r\n\r\nconst GifGridItem = ({ id, title, url}) => {\r\n    return (\r\n        <div className=\"card animate__animated animate__fadeIn\">\r\n            <img src={ url } alt={ title }/>\r\n            <p>{ title }</p>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default GifGridItem\r\n","import React from 'react'\r\nimport { useFetchGifs } from '../hooks/useFetchGifs'\r\nimport GifGridItem from './GifGridItem';\r\nconst GifGrid = ({ category }) => {\r\n    const { data:images, loading } = useFetchGifs( category );\r\n    return (\r\n        <>\r\n            <h3 className=\"animate__animated animate__fadeIn\">{category}</h3> \r\n            {loading && <p className=\"animate__animated animate__flash\"> Loading ... </p>}\r\n            <div className=\"card-grid\">\r\n                {\r\n                    images.map((img) => {\r\n                        return (\r\n                            <GifGridItem\r\n                                key={img.id}\r\n                                {...img}\r\n                            />\r\n\r\n                        )\r\n                    })\r\n                }\r\n            </div>\r\n        </>\r\n    )\r\n}\r\n\r\nexport default GifGrid\r\n","import { useEffect, useState } from 'react';\r\nimport { getGifs } from '../helpers/getGifs';\r\nexport const useFetchGifs = (category) => {\r\n    const [state, setState] = useState({\r\n        data: [],\r\n        loading: true,\r\n    });\r\n    \r\n    useEffect( () => {\r\n        getGifs(category)\r\n            .then(img => {\r\n                setState({\r\n                    data: img,\r\n                    loading: false,\r\n                })\r\n            });\r\n    },[ category ])\r\n\r\n    \r\n\r\n    return state;\r\n}\r\n\r\n","import React,{ useState } from 'react'\r\nimport AddCategory from './components/AddCategory';\r\nimport GifGrid from './components/GifGrid';\r\n\r\nconst GitExpertApp = () => {\r\n    const [categories, setCategories] = useState(['One Punch']);\r\n\r\n    return (\r\n        <>\r\n            <h2>GitExpertApp</h2>\r\n            <AddCategory setCategories={ setCategories }/>\r\n            <hr />\r\n            <ol>\r\n                {\r\n                    categories.map( category => (\r\n                        <GifGrid \r\n                            key={ category }\r\n                            category={ category } \r\n                        />\r\n                    ))\r\n                }\r\n            </ol>\r\n        </>\r\n    )\r\n}\r\n\r\nexport default GitExpertApp\r\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport GitExpertApp from './GitExpertApp';\nimport './index.css';\n\n\nReactDOM.render(\n    <GitExpertApp />,\n  document.getElementById('root')\n);\n\n"],"sourceRoot":""}